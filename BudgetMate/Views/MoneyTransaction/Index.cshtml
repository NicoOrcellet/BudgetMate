@using BudgetMate.ViewModels
@model FilterViewModel

<style>
    body{
        background-color: #D9D9D9;
    }

    .drop{
        background-color: #BCBCBC;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

</style>

<div class="container px-4">
    <h1>Transacciones</h1>
    <div class="row">
        <div>
            <form asp-action="index" method="get" asp-controller="MoneyTransaction">
                <div class="d-flex w-100 justify-content-between">
                    <p class="col-2">Buscar:</p>
                    <div class="col-10">
                        <Select id="searchSelect" class="form-select" name="searchingMethod">
                            @if (Model.searchingMethod == "amount")
                            {
                                <option value="amount" selected>Monto</option>
                                <option value="date">Fechas</option>
                                <option value="category">Categoría</option>
                            }
                            else if (Model.searchingMethod == "date")
                            {
                                <option value="amount">Monto</option>
                                <option value="date" selected>Fechas</option>
                                <option value="category">Categoría</option>
                            }
                            else if (Model.searchingMethod == "category")
                            {
                                <option value="amount">Monto</option>
                                <option value="date">Fechas</option>
                                <option value="category" selected>Categoría</option>
                            }
                            else
                            {
                                <option disabled selected value="none">Seleccionar filtro</option>
                                <option value="amount">Monto</option>
                                <option value="date">Fechas</option>
                                <option value="category">Categoría</option>

                            }
                        </Select>
                    </div>
                </div>
                <div class="d-flex">
                    <div class="col-7 d-flex">
                        <div id="dateInput" @(Model.searchingMethod == "date" ? "" : @Html.Raw("style=\"display: none\""))>
                            <div class="m-1">
                                <p>Desde:</p>
                                <input type="date" name="firstDateFilter" value="@Model.firstDate">
                            </div>
                            <div class="m-1">
                                <p>Hasta:</p>
                                <input type="date" name="lastDateFilter" value="@Model.lastDate">
                            </div>
                        </div>
                        <div id="amountInput" @(Model.searchingMethod == "amount" ? "" : @Html.Raw("style=\"display: none\""))>
                            <div class="m-1">
                                <p>Monto mínimo: </p>
                                <input type="number" min="0" placeholder="..." name="minAmountFilter" value="@Model.minAmount">
                            </div>
                            <div class="m-1">
                                <p>Monto máximo: </p>
                                <input type="number" min="0" placeholder="..." name="maxAmountFilter" value="@Model.maxAmount">
                            </div>
                        </div>
                        <div id="categoryInput" @(Model.searchingMethod == "category" ? "" : @Html.Raw("style=\"display: none\""))>
                            <p>Seleccione la categoría</p>
                            <select name="categoryFilter" class="form-select">
                                @if (Model.category != null)
                                {
                                    foreach (var category in Model.categoryList)
                                    {
                                        if (Model.category == category.CategoryName)
                                        {
                                            <option value="@category.CategoryName" selected>@category.CategoryName</option>
                                        } else {
                                            <option value="@category.CategoryName">@category.CategoryName</option>
                                        }
                                    }
                                } else {
                                    <option value="" selected disabled></option>
                                    foreach (var category in Model.categoryList)
                                    {
                                        <option value="@category.CategoryName">@category.CategoryName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="d-flex col-5 justify-content-between">
                        <button id="cleanFilters" class="col-4" type="button" @(Model.searchingMethod != null ? "" : @Html.Raw("style=\"display: none\""))>Limpiar</button>
                        <button id="searchButton" class="col-7" type="submit" @(Model.searchingMethod != null ? "" : @Html.Raw("style=\"display: none\""))>Buscar</button>
                    </div>
                </div>
            </form>
            
        </div>
    </div>
    <details class="drop mt-5" open>
        <summary>Ingresos</summary>
        <div class="d-flex justify-content-end">
            <button>Añadir ingreso</button>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Monto</th>
                    <th>Fecha</th>
                    <th>Descripción</th>
                    <th>Categoría</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.transactionList)
                {
                    if (transaction.IsIncome) {
                        <tr>
                            <td>@Html.DisplayFor(m => transaction.Amount)</td>
                            <td>@Html.DisplayFor(m => transaction.TransactionDate)</td>
                            <td>@Html.DisplayFor(m => transaction.TransactionDescription)</td>
                            <td>@Html.DisplayFor(m => transaction.Category.CategoryName)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </details>
    <details class="drop mt-5" open>
        <summary>Gastos</summary>
        <div class="d-flex justify-content-end">
            <button>Añadir gasto</button>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Monto</th>
                    <th>Fecha</th>
                    <th>Descripción</th>
                    <th>Categoría</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.transactionList)
                {
                    if (!transaction.IsIncome)
                    {
                        <tr>
                            <td>@Html.DisplayFor(m => transaction.Amount)</td>
                            <td>@Html.DisplayFor(m => transaction.TransactionDate)</td>
                            <td>@Html.DisplayFor(m => transaction.TransactionDescription)</td>
                            <td>@Html.DisplayFor(m => transaction.Category.CategoryName)</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </details>
</div>

<script src="~/js/transaction.js"></script>
 